pipeline TemperaturePipeline {

    TemperatureExtractor 
        -> TemperatureInterpreter
        -> TemperatureFilePicker
        -> TemperatureTextFileInterpreter;

    TemperatureTextFileInterpreter
        -> TemperatureCSVInterpreter
        -> NameHeaderWriterA1E1
        -> NameHeaderWriterJ1
        -> TemperatureTableInterpreter
        -> CelsiusToFahrenheitTransformerTemp
        -> CelsiusToFahrenheitTransformerBatTemp
        -> TemperatureLoader;

    block TemperatureExtractor oftype HttpExtractor {

        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block TemperatureInterpreter oftype ArchiveInterpreter {
         archiveType: "zip";
    }

    block TemperatureFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block TemperatureTextFileInterpreter oftype TextFileInterpreter { }

    block TemperatureCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block NameHeaderWriterA1E1 oftype CellWriter {
        at: range A1:E1;
        write: ["id","producer","model","month","temperature"];
    }
    block NameHeaderWriterJ1 oftype CellWriter {
        at: cell J1;
        write: ["battery_temperature"];
    }

    valuetype numeric oftype integer {
    constraints: [ numericContraint ];
    }

    constraint numericContraint on integer :
        value >= 0;

    valuetype month oftype integer {
        constraints: [ monthContraint ];
    }

    constraint monthContraint oftype RangeConstraint {
        lowerBound: 0;
        upperBound: 12;
    }  



    block TemperatureTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "id" oftype numeric,
            "producer" oftype text,
            "model" oftype text,
            "month" oftype month,
            "temperature" oftype decimal,
            "battery_temperature" oftype decimal
        ];
    }

    transform CelsiusToFahrenheit  {
        from tempCelsius oftype decimal;
        to tempFahrenheit oftype decimal;

        tempFahrenheit: (tempCelsius * 9/5) + 32;
    }

    block CelsiusToFahrenheitTransformerTemp oftype TableTransformer {
        inputColumns: ['temperature'];
        outputColumn: 'temperature';
        use: CelsiusToFahrenheit;
    }

    block CelsiusToFahrenheitTransformerBatTemp oftype TableTransformer {
        inputColumns: ['battery_temperature'];
        outputColumn: 'battery_temperature';
        use: CelsiusToFahrenheit;
    }

    block TemperatureLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }

}